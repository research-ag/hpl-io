import "../ledger-types.did";

service : () -> {

  // Return the info of the ledger accounts given by SubId-s.
  //
  // Return value is:
  // - throw (CANISTER_REJECT) if any SubId is unknown
  //
  // Backwards compatibility:
  // The caller receives null if a new case (other than "ft") is introduced
  // and used in the return value that the caller does not yet know about.
  adminAccountInfo : (IdSelector) -> (
    vec record {
      SubId;
      opt AccountType;
    }
  ) query;

  // Return the number of accounts of the ledger.
  nAdminAccounts : () -> (nat) query;

  // The same as 'state', but returns states on behald of ledger's admin account
  adminState : (
    record {
      accounts : opt IdSelector;
      ftSupplies : opt IdSelector;
      remoteAccounts : opt RemoteSelector;
      virtualAccounts : opt IdSelector;
    }
  ) -> (
    record {
      accounts : vec record { SubId; AccountState };
      ftSupplies : vec record { AssetId; FtSupply };
      remoteAccounts : vec record {
        RemoteId;
        opt record { AccountState; Time };
      };
      virtualAccounts : vec record {
        VirId;
        opt record { AccountState; SubId; Time };
      };
    }
  ) query;

};
